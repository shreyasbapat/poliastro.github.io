<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>poliastro</title><link href="http://poliastro.github.io/" rel="alternate"></link><link href="http://poliastro.github.io/feeds/all.atom.xml" rel="self"></link><id>http://poliastro.github.io/</id><updated>2018-02-22T12:00:00+01:00</updated><entry><title>Join poliastro thanks to Google Summer of Code!</title><link href="http://poliastro.github.io/2018/02/22/2018-02-22-join-poliastro-google-summer-of-code/" rel="alternate"></link><published>2018-02-22T12:00:00+01:00</published><updated>2018-02-22T12:00:00+01:00</updated><author><name>Juan Luis Cano Rodr√≠guez</name></author><id>tag:poliastro.github.io,2018-02-22:2018/02/22/2018-02-22-join-poliastro-google-summer-of-code/</id><summary type="html">&lt;p&gt;We are glad to announce that &lt;strong&gt;poliastro&lt;/strong&gt; will accept student applications during Google Summer of Code this year, thanks to the umbrella organization OpenAstronomy! üöÄ&lt;/p&gt;
&lt;p&gt;For the newcomers, poliastro is a pure Python library that allows you to easily simulate and visualize interplanetary orbits in an interactive way, &lt;a href="http://docs.poliastro.space/en/v0.8.0/index.html#success-stories"&gt;used by people from all around the world&lt;/a&gt;. Sounds interesting? Read on!&lt;/p&gt;
&lt;h1&gt;What is Google Summer of Code?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Google Summer of Code&lt;/strong&gt; (from now on, &lt;strong&gt;GSOC&lt;/strong&gt;) is, according to &lt;a href="https://summerofcode.withgoogle.com/"&gt;its own website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a global program focused on bringing more student developers into open source software development. Students work with an open source organization on a 3 month programming project during their break from school.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Google Summer of Code" src="https://upload.wikimedia.org/wikipedia/commons/1/1e/GSoC.png"&gt;&lt;/p&gt;
&lt;p&gt;GSOC is the inspiration for the Summer of Code in Space (SOCIS), a similar program organized by the European Space Agency in which &lt;a href="http://blog.poliastro.space/2017/09/15/2017-09-15-poliastro-070-released-ready-pycones/"&gt;we also participated last year&lt;/a&gt;, with ‚Ä¶&lt;/p&gt;</summary><category term="GSOC"></category><category term="Google"></category><category term="poliastro"></category><category term="students"></category></entry><entry><title>poliastro 0.7.0 released and ready for PyConES!</title><link href="http://poliastro.github.io/2017/09/15/2017-09-15-poliastro-070-released-ready-pycones/" rel="alternate"></link><published>2017-09-15T11:00:00+02:00</published><updated>2017-09-15T11:00:00+02:00</updated><author><name>Juan Luis Cano Rodr√≠guez</name></author><id>tag:poliastro.github.io,2017-09-15:2017/09/15/2017-09-15-poliastro-070-released-ready-pycones/</id><summary type="html">&lt;p&gt;It fills us with astronomical joy to announce the release of &lt;strong&gt;poliastro 0.7.0&lt;/strong&gt;! üöÄ&lt;/p&gt;
&lt;p&gt;For the newcomers, poliastro is a pure Python library that allows you to simulate and analyze interplanetary orbits in a Jupyter notebook in an interactive and easy way, &lt;a href="http://docs.poliastro.space/en/v0.7.0/index.html#success-stories"&gt;used by people from all around the world&lt;/a&gt;. Sounds interesting? Read on!&lt;/p&gt;
&lt;p&gt;This release is the biggest one since the creation of the project in terms of code changes and new features, and on behalf of the poliastro development team I would like to deeply thank the European Space Agency for the SOCIS grant that made it possible. Besides, I would like to officially welcome Antonio Hidalgo to the team, since in reward for his amazing work during SOCIS he gained write access to the repository. ¬°Bienvenido Antonio!&lt;/p&gt;
&lt;p&gt;As always, the easiest way to get poliastro in ‚Ä¶&lt;/p&gt;</summary><category term="SOCIS"></category><category term="poliastro"></category><category term="releases"></category><category term="PyConES"></category></entry><entry><title>FTPs, DASTCOM5 and dtypes (SOCIS 2017)</title><link href="http://poliastro.github.io/2017/08/17/2017-08-17-ftps-dastcom5-and-dtypes/" rel="alternate"></link><published>2017-08-17T22:00:00+02:00</published><updated>2017-08-17T22:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:poliastro.github.io,2017-08-17:2017/08/17/2017-08-17-ftps-dastcom5-and-dtypes/</id><summary type="html">&lt;p&gt;In the previous entry, I said that we had found a new database, and we would have to take a closer look to it.&lt;/p&gt;
&lt;p&gt;Actually, what I found was a &lt;a href="ftp://ssd.jpl.nasa.gov/pub"&gt;JPL public FTP&lt;/a&gt;, with lots of data in it (I have barely taken a glance to all the folders that contains, so have fun looking into it :P).&lt;/p&gt;
&lt;p&gt;In that FTP, inside &lt;code&gt;ssd&lt;/code&gt; folder (Solar System Dynamics, not Solid State Drive), there were several different files, some of them with .DB extension, some of them with .dat extension, and a README.&lt;/p&gt;
&lt;p&gt;The README explained some of the files (a few of them are still a mystery), and I quote what it said about a file named &lt;code&gt;dastcom5.zip&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dastcom5.zip&lt;/p&gt;
&lt;p&gt;Link to a a portable/programmable version of the JPL/Horizons 
 database of asteroids and comets ("DASTCOM5"), updated as often ‚Ä¶&lt;/p&gt;&lt;/blockquote&gt;</summary><category term="SOCIS"></category><category term="poliastro"></category><category term="NASA"></category><category term="DASTCOM5"></category><category term="APIs"></category><category term="JPL"></category><category term="mocking"></category></entry><entry><title>NeoWs, SPK-ID and parsing (SOCIS 2017)</title><link href="http://poliastro.github.io/2017/07/31/2017-07-31-neows-spk-id-and-parsing-socis/" rel="alternate"></link><published>2017-07-31T22:30:00+02:00</published><updated>2017-07-31T22:30:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:poliastro.github.io,2017-07-31:2017/07/31/2017-07-31-neows-spk-id-and-parsing-socis/</id><summary type="html">&lt;p&gt;In the previous entry, several different APIs related to NEOs were studied, and finally &lt;a href="https://api.nasa.gov/neo/?api_key=DEMO_KEY"&gt;NeoWs&lt;/a&gt; was chosen to start working with.&lt;/p&gt;
&lt;p&gt;This week, we aimed to start with coding itself, adding an &lt;code&gt;orbit_from_spk_id&lt;/code&gt; function to newly created &lt;code&gt;poliastro.neos module&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In order to achieve this, the first step was researching how NeoWs API exactly works.&lt;/p&gt;
&lt;h2&gt;NeoWs operation&lt;/h2&gt;
&lt;p&gt;As stated in the prevoius article of this "series", this API provides several different functionalities, but, for the moment, we were only interested in the lookup service.&lt;/p&gt;
&lt;p&gt;It also counts with web documentation, which was a really good start point, as you can see:&lt;/p&gt;
&lt;p&gt;&lt;img alt="NeoWs Documentation" src="http://poliastro.github.io/images/neows_lookup.png" title="NeoWs Documentation"&gt;&lt;/p&gt;
&lt;p&gt;When using the lookup service (and any NASA API) you need an &lt;code&gt;API key&lt;/code&gt;, but we used &lt;code&gt;DEMO_KEY&lt;/code&gt;, which only limits your queries to 40 per hour. Having that in mind, all you need to do is a query ‚Ä¶&lt;/p&gt;</summary><category term="SOCIS"></category><category term="poliastro"></category><category term="NASA"></category><category term="NeoWs"></category><category term="APIs"></category><category term="HTML"></category><category term="parsing"></category></entry><entry><title>NeoWs, SPK-ID y parsing (SOCIS 2017)</title><link href="http://poliastro.github.io/2017-07-31-neows-spk-id-and-parsing-socis-es.html" rel="alternate"></link><published>2017-07-31T22:30:00+02:00</published><updated>2017-07-31T22:30:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:poliastro.github.io,2017-07-31:2017-07-31-neows-spk-id-and-parsing-socis-es.html</id><summary type="html">&lt;p&gt;En la anterior entrada, estudiamos diferentes APIs relacionadas con NEOs, y finalmente elegimos &lt;a href="https://api.nasa.gov/neo/?api_key=DEMO_KEY"&gt;NeoWs&lt;/a&gt; para empezar a trabajar.&lt;/p&gt;
&lt;p&gt;Esta semana, nuestro objetivo era empezar con la propia programaci√≥n, a√±adiendo una funci√≥n de la forma &lt;code&gt;orbit_from_spk_id&lt;/code&gt; al nuevo m√≥dulo &lt;code&gt;poliastro.neos&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para conseguir esto, el primer paso era investigar el funcionamiento exacto de la API NeoWs.&lt;/p&gt;
&lt;h2&gt;Funcionamiento de NeoWs&lt;/h2&gt;
&lt;p&gt;En la anterior entrada de esta "serie", ya dijimos que esta API proporciona varias funcionalidades distintas, pero, por el momento, solo nos interesaba el servicio de b√∫squeda.&lt;/p&gt;
&lt;p&gt;Adem√°s, tambi√©n proporciona una documentaci√≥n web, que es un buen sitio para empezar, como se puede ver:&lt;/p&gt;
&lt;p&gt;&lt;img alt="NeoWs Documentation" src="http://poliastro.github.io/images/neows_lookup.png" title="NeoWs Documentation"&gt;&lt;/p&gt;
&lt;p&gt;Al usar el servicio de b√∫squeda (y cualquier otra API de la NASA), necesitas una &lt;code&gt;API key&lt;/code&gt;, pero nosotro usamos &lt;code&gt;DEMO_KEY&lt;/code&gt;, que √∫nicamente l√≠mita las peticiones a 40 por hora. Con esto en mente, lo √∫nico que necesitas ‚Ä¶&lt;/p&gt;</summary><category term="SOCIS"></category><category term="poliastro"></category><category term="NASA"></category><category term="NeoWs"></category><category term="APIs"></category><category term="HTML"></category><category term="parsing"></category></entry><entry><title>Space APIs, JSON and REST (SOCIS 2017)</title><link href="http://poliastro.github.io/2017/07/25/2017-07-25-space-apis-json-and-rest-socis/" rel="alternate"></link><published>2017-07-25T14:00:00+02:00</published><updated>2017-07-25T14:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:poliastro.github.io,2017-07-25:2017/07/25/2017-07-25-space-apis-json-and-rest-socis/</id><summary type="html">&lt;p&gt;After setting up the blog, it was time to start with the first week of my &lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo#timeline"&gt;timeline&lt;/a&gt;. The task for this week was to research the available NASA Open APIs and other NEOs databases that could better fit for this project.&lt;/p&gt;
&lt;p&gt;I had already studied some APIs, and taked a look at their capabilities, but further research was needed. As my &lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo#proposal"&gt;proposal&lt;/a&gt; was made of 3 different pages, I analyzed each one separately.&lt;/p&gt;
&lt;h2&gt;CNEOS page&lt;/h2&gt;
&lt;p&gt;In the &lt;a href="https://cneos.jpl.nasa.gov/orbits/"&gt;CNEOS page&lt;/a&gt; there is a list of tools, but it can be shorten to four different APIs/Databases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ssd.jpl.nasa.gov/sbdb.cgi"&gt;JPL Small-Body Database Browser&lt;/a&gt;: allows to search any small-body (like NEOs) by entering the IAU number, name, or designation, and also supports wild-cards &lt;code&gt;*&lt;/code&gt; and/or &lt;code&gt;?&lt;/code&gt;. Available data include, quoting the page itself:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;orbital elements&lt;/li&gt;
&lt;li&gt;orbit diagrams&lt;/li&gt;
&lt;li&gt;physical parameters&lt;/li&gt;
&lt;li&gt;discovery circumstances&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Newly discovered objects and their ‚Ä¶&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;</summary><category term="SOCIS"></category><category term="ESA"></category><category term="poliastro"></category><category term="NASA"></category><category term="APIs"></category><category term="open data"></category></entry><entry><title>APIs espaciales, JSON y REST (SOCIS 2017)</title><link href="http://poliastro.github.io/2017-07-25-space-apis-json-and-rest-socis-es.html" rel="alternate"></link><published>2017-07-25T14:00:00+02:00</published><updated>2017-07-25T14:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:poliastro.github.io,2017-07-25:2017-07-25-space-apis-json-and-rest-socis-es.html</id><summary type="html">&lt;p&gt;Despu√©s de montar el blog, era el momento de empezar con la primera semana de mi &lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo#timeline"&gt;timeline&lt;/a&gt;. La tarea de esta semana era investigar las APIs de la NASA disponibles y otras bases de datos de NEOs que pudiesen ser √∫tiles para este proyecto.&lt;/p&gt;
&lt;p&gt;Ya hab√≠a estudiado algunas APIs y echado un vistazo a sus posibilidades, pero hac√≠a falta una investigaci√≥n m√°s profunda. Como mi &lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo#proposal"&gt;propuesta&lt;/a&gt; se compon√≠a de 3 p√°ginas diferentes, decid√≠ analizar cada una por separado.&lt;/p&gt;
&lt;h2&gt;CNEOS&lt;/h2&gt;
&lt;p&gt;En la p√°gina del &lt;a href="https://cneos.jpl.nasa.gov/orbits/"&gt;CNEOS&lt;/a&gt; hay una lista de distintas herramientas, pero puede ser acortada a las siguientes APIs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ssd.jpl.nasa.gov/sbdb.cgi"&gt;JPL Small-Body Database Browser&lt;/a&gt;: permite buscar cualquier cuerpo menor (como los NEOs) mediante su n√∫mero IAU, nombre o designaci√≥n, y tambi√©n soporta los caracteres comod√≠n &lt;code&gt;*&lt;/code&gt; y/o &lt;code&gt;?&lt;/code&gt;. Los datos disponibles incluyen, citando a la propia p√°gina:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;elementos orbitales&lt;/li&gt;
&lt;li&gt;diagramas orbitales&lt;/li&gt;
&lt;li&gt;par√°metros f√≠sicos ‚Ä¶&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;</summary><category term="SOCIS"></category><category term="ESA"></category><category term="poliastro"></category><category term="NASA"></category><category term="APIs"></category><category term="open data"></category></entry><entry><title>Pelican, Github Pages and auto-deployment (SOCIS 2017)</title><link href="http://poliastro.github.io/2017/07/15/2017-07-15-pelican-github-pages-and-auto-deployment-socis/" rel="alternate"></link><published>2017-07-15T14:00:00+02:00</published><updated>2017-07-15T14:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:poliastro.github.io,2017-07-15:2017/07/15/2017-07-15-pelican-github-pages-and-auto-deployment-socis/</id><summary type="html">&lt;p&gt;After several weeks thinking that &lt;a href="http://sophia.estec.esa.int/socis/"&gt;SOCIS&lt;/a&gt; would not launch this year, finally the long-awaited email arrived! I am really happy for being selected by &lt;code&gt;poliastro&lt;/code&gt; and my mentor &lt;code&gt;@astrojuanlu&lt;/code&gt;, with the aim of creating an API, relying on NASA Open APIs, in order to provide small-bodies orbital data (&lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo"&gt;my proposal can be seen here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Our plan is to write a weekly blog entry, stating and documenting what have been done during that period. I think these posts will be a great way of reviewing what have been accomplished, and I also hope they will be interesting enough to anyone interested in Python, science, &lt;a href="https://en.wikipedia.org/wiki/Near-Earth_object"&gt;NEOs&lt;/a&gt;, or just reading random internet blogs.&lt;/p&gt;
&lt;p&gt;This has been the first one of eight weeks (yeah, that‚Äôs not what my proposal timeline says, but it‚Äôs all we have üòä), and, surprisingly, the first task I ‚Ä¶&lt;/p&gt;</summary><category term="SOCIS"></category><category term="ESA"></category><category term="poliastro"></category></entry><entry><title>Pelican, Github Pages y despliegue autom√°tico (SOCIS 2017)</title><link href="http://poliastro.github.io/2017-07-15-pelican-github-pages-and-auto-deployment-socis-es.html" rel="alternate"></link><published>2017-07-15T14:00:00+02:00</published><updated>2017-07-15T14:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:poliastro.github.io,2017-07-15:2017-07-15-pelican-github-pages-and-auto-deployment-socis-es.html</id><summary type="html">&lt;p&gt;Tras varias semanas creyendo que &lt;a href="http://sophia.estec.esa.int/socis/"&gt;SOCIS&lt;/a&gt; no se realizar√≠a este a√±o, ¬°por fin me ha llegado el email!  Estoy muy contento de haber sido elegido por &lt;code&gt;poliastro&lt;/code&gt; y mi mentor &lt;code&gt;@astrojuanlu&lt;/code&gt;, con el objetivo de crear una API, basada en las APIs abiertas de la NASA, para proporcionar datos orbitales de cuerpos menores (&lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo"&gt;mi propuesta completa est√° aqu√≠&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Nuestra idea es escribir una entrada semanal en este blog, documentado el trabajo realizado durante esa semana. Creo que cada post ser√° una buena manera de revisar lo que se va consiguiendo, y adem√°s espero que resulte interesante para cualquier interesado en Python, ciencia, &lt;a href="https://es.wikipedia.org/wiki/Objeto_pr%C3%B3ximo_a_la_Tierra"&gt;NEOs&lt;/a&gt;, o simplemente en leer blogs aleatorios por internet.&lt;/p&gt;
&lt;p&gt;Esta ha sido la primera de ocho semanas (s√≠, s√© que en mi propuesta pone otra cosa, pero es el tiempo que tenemos üòä), y, sorprendentemente, la primera tarea que ‚Ä¶&lt;/p&gt;</summary><category term="SOCIS"></category><category term="ESA"></category><category term="poliastro"></category></entry></feed>